import{_ as a,p as e,q as r,a1 as d}from"./framework-96b046e1.js";const i={},o=d('<h2 id="_1-java-中的-longadder-和-atomiclong-的区别" tabindex="-1"><a class="header-anchor" href="#_1-java-中的-longadder-和-atomiclong-的区别" aria-hidden="true">#</a> 1 Java 中的 LongAdder 和 AtomicLong 的区别</h2><p>LongAdder 适用于多写+多读，低并发使用全局计数器，高并发使用序列号生成器累加结果。</p><p>AtomicLong 基于 CAS + 自选，高并发下 CAS 失败可能会导致性能损耗</p><h2 id="_2-jdk-和-jre-的区别是什么" tabindex="-1"><a class="header-anchor" href="#_2-jdk-和-jre-的区别是什么" aria-hidden="true">#</a> 2 JDK 和 JRE 的区别是什么</h2><p>Java 运行时环境 (JRE) 是将要执行 Java 程序的 Java 虚拟机。它同时也包含了执行 applet 需要的浏览器插件。</p><p>Java 开发工具包 (JDK) 是完整的 Java 软件开发包，包含了 JRE，编译器和其 他的工具 (比如：JavaDoc，Java 调试器)，可以让开发者开发、编译、执行 Java 应用程序。</p><h2 id="_3-反射的实现与作用" tabindex="-1"><a class="header-anchor" href="#_3-反射的实现与作用" aria-hidden="true">#</a> 3 反射的实现与作用</h2><p>JAVA 语言编译之后会生成一个.class 文件，反射就是通过字节码文件找到某一个类、类中 的方法以及属性等。反射的实现主要借助以下四个类：Class：类的对象，Constructor：类的构造方法，Field：类中的属性对象，Method：类中的方法对象。</p><p>作用：反射机制指的是程序在运行时能够获取自身的信息。在 JAVA 中，只要给定类的名字， 那么就可以通过反射机制来获取类的所有信息</p><h2 id="_4-运行时异常与一般异常有何异同" tabindex="-1"><a class="header-anchor" href="#_4-运行时异常与一般异常有何异同" aria-hidden="true">#</a> 4 运行时异常与一般异常有何异同?</h2><p>异：</p><ul><li>一般异常需要编程时就进行处理，运行时异常不需要</li><li>一般异常一般表示即使程序设计无误，依然有可能发生</li></ul><p>同：都可以编程时就进行处理</p><h2 id="_5-error-和-exception-有什么区别" tabindex="-1"><a class="header-anchor" href="#_5-error-和-exception-有什么区别" aria-hidden="true">#</a> 5 error 和 exception 有什么区别?</h2><p>error 表示恢复不是不可能但很困难的情况下的一种严重问题。比如说内存溢出。不可能指望程序能处理这样的情况。</p><p>exception 一般都是程序可处理异常</p><h2 id="_6-什么是-java-序列化-如何实现-java-序列化" tabindex="-1"><a class="header-anchor" href="#_6-什么是-java-序列化-如何实现-java-序列化" aria-hidden="true">#</a> 6 什么是 java 序列化，如何实现 java 序列化？</h2><p>序列化：把对象转化为字节保存</p><p>如何实现：实现 Serializable 接口标记，然后简单实现可以用 Object 输入输出流保存。</p>',19),t=[o];function n(h,c){return e(),r("div",null,t)}const l=a(i,[["render",n],["__file","Java杂.html.vue"]]);export{l as default};
