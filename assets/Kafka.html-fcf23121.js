import{_ as n,M as l,p as t,q as o,R as a,t as r,N as i,a1 as h}from"./framework-96b046e1.js";const d={},p=h('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><h3 id="kafka为什么这么快" tabindex="-1"><a class="header-anchor" href="#kafka为什么这么快" aria-hidden="true">#</a> Kafka为什么这么快</h3><ol><li>写磁盘时使用页缓存，再由操作系统写入文件系统</li><li>持久化消息日志数据数据时，使用追加的方式写入数据，顺序写速度快</li><li>使用零拷贝，网络数据持久化到磁盘，磁盘文件发送到网卡，减少内核态读写时无用IO</li><li>批处理，一次处理多条信息</li><li>pull模式，消费端根据消费能力拉取消息</li></ol><h3 id="kafka采用push还是pull模式" tabindex="-1"><a class="header-anchor" href="#kafka采用push还是pull模式" aria-hidden="true">#</a> Kafka采用push还是pull模式</h3><p>消费端采用pull模式，pull可以让消费者根据消费能力和消费策略拉取消息</p><h3 id="kafka-生产者写数据时-ack为0-1-1分别代表什么" tabindex="-1"><a class="header-anchor" href="#kafka-生产者写数据时-ack为0-1-1分别代表什么" aria-hidden="true">#</a> Kafka 生产者写数据时，ACK为0，1，-1分别代表什么？</h3><p>1（默认）：发送数据leader接收消息后就算消息发送成功</p><p>0：生产者发送消息后就不管了</p><p>-1：生产者等待所有follower都确认后消息才算完成</p><h3 id="为什么需要消息队列" tabindex="-1"><a class="header-anchor" href="#为什么需要消息队列" aria-hidden="true">#</a> 为什么需要消息队列</h3><p>削峰、解耦、异步、可恢复</p><h3 id="消息积压怎么解决" tabindex="-1"><a class="header-anchor" href="#消息积压怎么解决" aria-hidden="true">#</a> 消息积压怎么解决</h3><p>Kafka一个partition只能由一个消费者消费，如果消费者不足，考虑增加partition数量，让partition数=消费者数</p><p>如果下游支持批处理，提高pull时消息数量</p><h3 id="如何实现消息最少消费一次" tabindex="-1"><a class="header-anchor" href="#如何实现消息最少消费一次" aria-hidden="true">#</a> 如何实现消息最少消费一次</h3><ol><li><p>设置生产者ack为-1，让生产者等待所有副本响应</p></li><li><p>创建Topic时，副本数&gt;=2</p></li><li><p>broker设置ISR最小应答数&gt;=2</p></li></ol><h3 id="如何实现消息最多消费一次" tabindex="-1"><a class="header-anchor" href="#如何实现消息最多消费一次" aria-hidden="true">#</a> 如何实现消息最多消费一次</h3><p>设置生产者ack为0</p><h3 id="如何精确消费一次" tabindex="-1"><a class="header-anchor" href="#如何精确消费一次" aria-hidden="true">#</a> 如何精确消费一次</h3><p>生产者：</p><ol><li><p>实现最少消费一次</p></li><li><p>开启幂等性</p><p>保证单个paritition内重复数据不落盘，消息重复依据是<code>&lt;PID，Partition，SeqNumber&gt;</code></p></li><li><p>开启事务</p><p>幂等性只能保证单分区单会话精确一次，开启事务能保证多分区精确一次。开启事务后，PID由事务协调节点生成</p></li></ol><h3 id="isr-是什么-如果leader-crash了-isr为空怎么办" tabindex="-1"><a class="header-anchor" href="#isr-是什么-如果leader-crash了-isr为空怎么办" aria-hidden="true">#</a> ISR 是什么，如果Leader Crash了，ISR为空怎么办</h3><p>ISR（In-Sync Replicas）指同步副本，ISR列表保存了一个分区Leader+Follower副本，只有处于ISR内副本才可以当选Leader</p><p>Leader Crash ISR为空：</p><ol><li>等待旧leader恢复</li><li>人工更改当前分区所有副本成为ISR，但可能出现数据不是最新的问题</li></ol><h3 id="kafka为什么不支持读写分离" tabindex="-1"><a class="header-anchor" href="#kafka为什么不支持读写分离" aria-hidden="true">#</a> Kafka为什么不支持读写分离？</h3><p>读写分离的场景一般都是写少读多，读实时性或者数据一致性没有很高的要求</p><p>kafka是分布式日志系统，一般情况是读写对等的</p><p>涉及同步，如果要保持一致性，消息延迟可能加加大，吞吐量降低</p><p>Kafka本身提供多partition架构，数据分布在多个broker上，可以支持数据量拓展，在读写对等的情况下，读写分离必要性很低</p><h3 id="broker-的rebalance是什么" tabindex="-1"><a class="header-anchor" href="#broker-的rebalance是什么" aria-hidden="true">#</a> Broker 的rebalance是什么？</h3><p>rebalance规定了消费者组的消费者如何分配一个topic的partition</p><p>消费者成员数、topic分区数、订阅的topic数发生变化都会触发rebalance</p><p>重平衡过程中，消费者是不能从kafka消费消息的</p><h3 id="如何避免rebalance" tabindex="-1"><a class="header-anchor" href="#如何避免rebalance" aria-hidden="true">#</a> 如何避免rebalance？</h3><p>主要就是避免消费者发生故障，设置kafka消费者心跳发送的频率、超时时间等</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',37),c={href:"https://gitee.com/souyunku/NewDevBooks/blob/master/docs/Kafka/Kafka%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%882021%E5%B9%B4Kafka%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E5%A4%A7%E5%85%A8%EF%BC%89.md",target:"_blank",rel:"noopener noreferrer"},s={href:"https://blog.csdn.net/csdn_demo_java/article/details/133897387",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.nowcoder.com/creation/subject/6747cb838c2440f3a8058501fba6b209",target:"_blank",rel:"noopener noreferrer"},f={href:"https://juejin.cn/post/7012453534754947102",target:"_blank",rel:"noopener noreferrer"};function u(b,_){const e=l("ExternalLinkIcon");return t(),o("div",null,[p,a("p",null,[a("a",c,[r("docs/Kafka/Kafka中级面试题汇总及答案（2021年Kafka面试题及答案大全）.md · 鹏磊/NewDevBooks - 码云 - 开源中国 (gitee.com)"),i(e)])]),a("p",null,[a("a",s,[r("Kafka核心原理之精准一次性投递_kafka at least once-CSDN博客"),i(e)])]),a("p",null,[a("a",k,[r("社招 - 话题 - 牛客网 (nowcoder.com)"),i(e)])]),a("p",null,[a("a",f,[r("kafka重平衡 - 掘金 (juejin.cn)"),i(e)])])])}const x=n(d,[["render",u],["__file","Kafka.html.vue"]]);export{x as default};
