import{_ as e,p as l,q as a,a1 as i}from"./framework-96b046e1.js";const t={},s=i('<h2 id="_1-https-ssl过程" tabindex="-1"><a class="header-anchor" href="#_1-https-ssl过程" aria-hidden="true">#</a> 1 https ssl过程</h2><ol><li>客户端向服务器请求HTTPS连接</li><li>服务端确认并返回证书</li><li>客户端验证证书</li><li>确认成功，生成对称密钥A，用证书内的公钥加密后发送给服务器</li><li>服务器用私钥解出密钥A，并发出确认，随后使用密钥A进行HTTP通信</li></ol><h2 id="_2-tcp四次挥手" tabindex="-1"><a class="header-anchor" href="#_2-tcp四次挥手" aria-hidden="true">#</a> 2 tcp四次挥手</h2><ol><li>客户端发送FIN（finish）报文，请求断开连接，客户端进入WAIT状态</li><li>服务端发送ACK确认，服务端开始关闭资源，服务端进入CLOSE_WAIT状态</li><li>服务端发送FIN（finish）报文，请求，服务端进入LAST_WAIT状态</li><li>客户端收到FIN 报文，进入TIME_WAIT状态，发送ACK给服务端，服务端进入CLOSED状态</li></ol><h2 id="_3-tcp-三次握手" tabindex="-1"><a class="header-anchor" href="#_3-tcp-三次握手" aria-hidden="true">#</a> 3 tcp 三次握手</h2><ol><li>客户端发送SYN同步信号给服务端</li><li>服务端发送ACK应答</li><li>客户端收到后回复ACK</li></ol><h2 id="_4-select-poll-epoll-区别-epoll的et和lt是怎么回事" tabindex="-1"><a class="header-anchor" href="#_4-select-poll-epoll-区别-epoll的et和lt是怎么回事" aria-hidden="true">#</a> 4 select poll epoll 区别？epoll的ET和LT是怎么回事？</h2><p>select 会把所有socket文件放到内核一个数组中保存，网卡收到数据后，轮询这些socket，大小上限为1024</p><p>poll 也是轮询，不过不使用数组，没有大小上限</p><p>epoll 当网卡来数据后，会调用socket的callback函数，把对应socket放入到ready_list 中，然后唤醒epoll</p><p>ET：边缘触发，只在网卡来数据时，把对应socket放到ready_list中</p><p>LT：水平触发，epoll遍历ready_list时，读取socket事件时发生了感兴趣的事件，那么也会加入到 ready_list</p><h2 id="_5-nginx怎么负载均衡" tabindex="-1"><a class="header-anchor" href="#_5-nginx怎么负载均衡" aria-hidden="true">#</a> 5 nginx怎么负载均衡？</h2><p>设置下游服务器地址，支持轮询、权重、hash等方式进行负载均衡</p><h2 id="_6-tcp阻塞和非阻塞" tabindex="-1"><a class="header-anchor" href="#_6-tcp阻塞和非阻塞" aria-hidden="true">#</a> 6 TCP阻塞和非阻塞？</h2><p>TCP阻塞模式会让线程一直等待数据到来或将数据发送完毕，期间不能执行其他任务。适用于小规模，响应时间短</p><p>而TCP非阻塞模式下，线程不会等待，可以在没有数据读取/发送时继续去执行其他任务。</p>',17),c=[s];function h(o,r){return l(),a("div",null,c)}const d=e(t,[["render",h],["__file","网络.html.vue"]]);export{d as default};
